apiVersion: v1
kind: Template
metadata:
  name: ${PROXY_SERVICE}
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${PROXY_SERVICE}
    name: ${PROXY_SERVICE}
  spec:
    replicas: 1
    selector:
      app: ${PROXY_SERVICE}
      deploymentconfig: ${PROXY_SERVICE}
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${PROXY_SERVICE}
          deploymentconfig: ${PROXY_SERVICE}
      spec:
        containers:
        - env:
          - name: STATS_PASSWORD
            value: "${STATS_PASSWORD}"
          image: docker.io/tjungbauer/haproxy17:latest
          imagePullPolicy: Always
          name: haproxy-exporter
          envFrom:
            - configMapRef:
                name: ${PROXY_SERVICE}-cm
          ports:
          - containerPort: ${{SCRAPER_TCP_PORT}}
            protocol: TCP
          command:
          - /usr/local/sbin/haproxy_exporter
          - "--haproxy.scrape-uri=http://$(STATS_USERNAME):$(STATS_PASSWORD)@localhost:$(STATS_PORT)/?stats;csv"
          - "--web.listen-address=:$(SCRAPER_TCP_PORT)"
          resources: {}
          terminationMessagePath: /dev/termination-log
        - env:
          - name: SERVICE_DEST
            value: ${SERVICE_DEST}
          - name: SERVICE_DEST_PORT
            value: "${SERVICE_DEST_PORT}"
          - name: SERVICE_NAME
            value: ${SERVICE_NAME}
          - name: SERVICE_TCP_PORT
            value: "${SERVICE_TCP_PORT}"
          - name: STATS_PASSWORD
            value: "${STATS_PASSWORD}"
          - name: BALANCE_TYPE
            value: "${BALANCE_TYPE}"
          - name: MOD_HEADERS
            value: "${MOD_HEADERS}"
          image: docker.io/tjungbauer/haproxy17:latest
          imagePullPolicy: Always
          name: ${PROXY_SERVICE}
          envFrom:
            - configMapRef:
                name: ${PROXY_SERVICE}-cm
          ports:
          - containerPort: ${{SERVICE_TCP_PORT}}
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${PROXY_SERVICE}
    name: ${PROXY_SERVICE}
  spec:
    ports:
    - name: ${SERVICE_TCP_PORT}-tcp
      port: ${{SERVICE_TCP_PORT}}
      protocol: TCP
    selector:
      app: ${PROXY_SERVICE}
      deploymentconfig: ${PROXY_SERVICE}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${PROXY_SERVICE}-cm
  data:
    DEBUG: "${DEBUG}"
    SCRAPER_TCP_PORT: "${SCRAPER_TCP_PORT}"
    STATS_PORT: "${STATS_PORT}"
    STATS_USER: "${STATS_USER}"
    TZ: "${TZ}"
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${PROXY_SERVICE}
    name: haproxy-exporter
  spec:
    ports:
    - name: ${SCRAPER_TCP_PORT}-tcp
      port: ${{SCRAPER_TCP_PORT}}
      protocol: TCP
    selector:
      app: ${PROXY_SERVICE}
      deploymentconfig: ${PROXY_SERVICE}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${PROXY_SERVICE}
    name: haproxy-exporter
  spec:
    port:
      targetPort: ${SCRAPER_TCP_PORT}-tcp
    tls:
      termination: edge
    to:
      kind: Service
      name: haproxy-exporter
      weight: 100
    wildcardPolicy: None
parameters:
- description: The name for the application.
  name: PROXY_SERVICE
  required: true
- description: Service name of this egress proxy.
  name: SERVICE_NAME
  required: true
- description: Service and Listening port of this egress proxy.
  name: SERVICE_TCP_PORT
  required: true
- description: The remote listening port of the target service
  name: SERVICE_DEST_PORT
  required: true
- description: The remote listening ip or name of the target service
  name: SERVICE_DEST
  required: true
- description: Activate the shell command output of the container start script
  name: DEBUG
  value: "false"
- description: The timezone for the pod
  name: TZ
  value: "Europe/Vienna"
- description: The User for the status page
  name: STATS_USER
  value: "STATS_USER001"
- description: The password for the status page
  name: STATS_PASSWORD
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  required: true
- description: The port for the status page
  name: STATS_PORT
  value: "2017"
- description: The port for the HAProxy Exporter for Prometheus
  name: SCRAPER_TCP_PORT
  value: "9101"
- description: "Modify header and add url_port"
  name: MOD_HEADERS
  value: ""
- description: "Type of loadbalancing"
  name: BALANCE_TYPE
  value: "roundrobin"


